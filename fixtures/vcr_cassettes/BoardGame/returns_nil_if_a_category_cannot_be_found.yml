---
http_interactions:
- request:
    method: get
    uri: https://api.boardgameatlas.com/api/search?client_id=<DONT_EXPOSE_MY_DATA_PLEASE>&limit=20&name=clues
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Connection:
      - keep-alive
      X-Powered-By:
      - Express
      X-Ratelimit-Limit:
      - '420'
      X-Ratelimit-Remaining:
      - '419'
      Date:
      - Sun, 10 Jan 2021 16:06:01 GMT
      X-Ratelimit-Reset:
      - '1610294791'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Origin, X-Requested-With, Content-Type, Accept
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"aa30-IYdovI81JOaf5ZvB6ffjOc8Ldcg"
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 10 Jan 2021 16:06:01 GMT
recorded_with: VCR 6.0.0
